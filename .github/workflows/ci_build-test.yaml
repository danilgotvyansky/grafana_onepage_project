# .github/workflow/ci_build-test.yaml
name: Build&Test | Application CI

on:
  pull_request:
    branches: [ "main" ]
    paths:
    - "application/**"
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.x]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up MariaDB
      run: |
        echo "GRANT ALL PRIVILEGES ON \`test_${{ secrets.DB_NAME }}\`.* TO '${{ secrets.DB_USER }}'@'%';
        GRANT ALL PRIVILEGES ON \`${{ secrets.DB_NAME }}\`.* TO '${{ secrets.DB_USER }}'@'%';
        FLUSH PRIVILEGES;" > init.sql
        docker run --name mariadb -d \
        -e MARIADB_ROOT_PASSWORD='${{ secrets.DB_ROOT_PASSWORD }}' \
        -e MARIADB_DATABASE='${{ secrets.DB_NAME }}' \
        -e MARIADB_USER='${{ secrets.DB_USER }}' \
        -e MARIADB_PASSWORD='${{ secrets.DB_PASSWORD }}' \
        -v $PWD/init.sql:/docker-entrypoint-initdb.d/init.sql \
        -p 3306:3306 \
        mariadb \
        --character-set-server=utf8 --collation-server=utf8_bin \
        --init-file /docker-entrypoint-initdb.d/init.sql

    - name: MariaDB Health Check
      run: |
        until echo 'SHOW DATABASES;' | docker exec -i mariadb mariadb -uroot -p${{ secrets.DB_ROOT_PASSWORD }} > /dev/null; do
          sleep 1
          echo "Waiting for MariaDB instance to be available..."
        done

    - name: Install Dependencies
      run: |
        cd application
        python -m pip install --upgrade pip       
        pip install -r requirements.txt

    - name: Run Tests
      env:
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_HOST: 0.0.0.0
        DB_PORT: 3306
        DEBUG: TRUE
        DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
        DJANGO_CSRF_TRUSTED_ORIGINS: ${{env.DJANGO_CSRF_TRUSTED_ORIGINS}}
      run: |
        cd application
        python manage.py test
